# 类属性：在类定义的地方定义的属性是类属性（所有的实例对象都有类的属性）
# 实例属性：由于Python是动态语言，根据类创建的实例可以任意绑定属性。而在单独的某个实例上绑定的属性是只属于这个实例的实例属性
# 在编写程序的时候，千万不要对实例属性和类属性使用相同的名字，因为相同名称的实例属性将屏蔽掉类属性，但是当你删除实例属性后，再使用相同的名称，访问到的将是类属性。


class Student:
    # 类属性
    score = 100

    def __init__(self, s_name: str):
        self.s_name = s_name


s1 = Student('老司机')
# 打印出类属性
print(s1.score)
# 新增一个实例属性
s1.score = 3000
# 优先查找实例属性，所以此时输出的是3000
print(s1.score)
# 删除实例属性
del s1.score
# 查找到类属性，100
print(s1.score)
